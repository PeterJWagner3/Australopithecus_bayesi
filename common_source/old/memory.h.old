#ifdef memory	#include <stdlib.h>	#include <stdio.h>	#include <time.h>	#include <math.h>	#include <string.h>	int *ivector(int length);	void free_ivector(int *v);	int **intmatrix(int nrows, int ncolumns);	void free_intmatrix(int **m, int nrows, int ncolumns);	double *dvector(int length);	void free_dvector(double *v);	double **doubmatrix(int nrows, int ncolumns);	void free_doubmatrix(double **m, int nrows, int ncolumns);	long *lngvector(long length);	void free_lngvector(long *v);	long **lngmatrix(int nrows, int ncolumns);	void free_lngmatrix(long **m, int nrows, int ncolumns);	unsigned long *ulvector(long length);	void free_ulvector(unsigned long *v);	unsigned long **ulmatrix(int nrows, int ncolumns);	void free_ulmatrix(unsigned long **m, int nrows, int ncolumns);	float *fvector(int length);	void free_fvector(float *v);	float **fmatrix(int nrows, int ncolumns);	void free_fmatrix(float **m, int nrows, int ncolumns);#else	extern int *ivector(int length);	extern void free_ivector(int *v);	extern int **intmatrix(int nrows, int ncolumns);	extern void free_intmatrix(int **m, int nrows, int ncolumns);	extern double *dvector(int length);	extern void free_dvector(double *v);	extern double **doubmatrix(int nrows, int ncolumns);	extern void free_doubmatrix(double **m, int nrows, int ncolumns);	extern long *lngvector(long length);	extern void free_lngvector(long *v);	extern long **lngmatrix(int nrows, int ncolumns);	extern void free_lngmatrix(long **m, int nrows, int ncolumns);	extern unsigned long *ulvector(long length);	extern void free_ulvector(unsigned long *v);	extern unsigned long **ulmatrix(int nrows, int ncolumns);	extern void free_ulmatrix(unsigned long **m, int nrows, int ncolumns);	extern float *fvector(int length);	extern void free_fvector(float *v);	extern float **fmatrix(int nrows, int ncolumns);	extern void free_fmatrix(float **m, int nrows, int ncolumns);#endif