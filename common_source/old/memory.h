/* I have finally decided that NR's memory functions were to difficult./*/* written by M. Kosnik 2000.02.10/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */#ifdef dynamic_memory	#include <stdlib.h>	#include <stdio.h>		/* integer */	int *ivector(int );	int **imatrix(int , int );	void free_ivector(int *);	void free_imatrix(int **, int , int );	/* unsigned longs */	unsigned long *ulvector(long );	unsigned long **ulmatrix(long , long );	void free_ulvector(unsigned long *);	void free_ulmatrix(unsigned long **, long , long );	/* float */	float *fvector(int );	float **fmatrix(int , int );	void free_fvector(float *);	void free_fmatrix(float **, int , int );	/* double */	double *dvector(int );	double **dmatrix(int , int );	void free_dvector(double *);	void free_dmatrix(double **, int , int );#else	 	/* integer */	extern int *ivector(int );	extern int **imatrix(int , int );	extern void free_ivector(int *);	extern void free_imatrix(int **, int , int );	/* unsigned longs */	extern unsigned long *ulvector(long );	extern unsigned long **ulmatrix(long , long );	extern void free_ulvector(unsigned long *);	extern void free_ulmatrix(unsigned long **, long , long );	/* float */	extern float *fvector(int );	extern float **fmatrix(int , int );	extern void free_fvector(float *);	extern void free_fmatrix(float **, int , int );	/* double */	extern double *dvector(int );	extern double **dmatrix(int , int );	extern void free_dvector(double *);	extern void free_dmatrix(double **, int , int );#endif